# aws ssm get-parameter --name /realtime-changes-prod-producer/secret --output text  --query Parameter.Value | wrangler secret put AwsSecretAccessKey
# aws sqs get-queue-url --queue-name=realtime-changes-prod-changes-queue --output text --query QueueUrl
# aws iam list-access-keys --user-name=realtime-changes-prod-consumer --output text --query AccessKeyMetadata\[-1\].AccessKeyId
# aws ssm get-parameter --name /realtime-changes-prod-consumer-user/secret --output text  --query Parameter.Value
service: realtime-changes-${sls:stage}

plugins:
  - serverless-stack-output

custom:
  output:
    file: vars-${sls:stage}.toml

provider:
  name: aws
  region: ${env:AWS_DEFAULT_REGION, 'eu-central-1'}

resources:
  Resources:
    ChangesQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: ${self:service}-changes-queue
        # 4 days
        MessageRetentionPeriod: 345600
        DelaySeconds: 2
        VisibilityTimeout: 5
        ReceiveMessageWaitTimeSeconds: 10
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - ChangesDeadLetterQueue
              - Arn
          maxReceiveCount: 3

    ChangesDeadLetterQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: ${self:service}-queue-dead-letter
        # 14 days
        MessageRetentionPeriod: 1209600

    ChangesProducerUser:
      Type: 'AWS::IAM::User'
      Properties:
        UserName: ${self:service}-producer
        Policies:
          - PolicyName: ExampleUserSQSPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'sqs:SendMessage'
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:sqs:*'
                          - Ref: 'AWS::AccountId'
                          - 'Fn::GetAtt':
                              - ChangesQueue
                              - QueueName

    ChangesProducerUserKey:
      Type: 'AWS::IAM::AccessKey'
      Properties:
        UserName:
          Ref: ChangesProducerUser

    ChangesProducerUserKeySecret:
      Type: 'AWS::SSM::Parameter'
      Properties:
        Name: /${self:service}-producer-user/secret
        Type: String
        Value:
          'Fn::GetAtt':
            - ChangesProducerUserKey
            - SecretAccessKey


    ChangesConsumerUser:
      Type: 'AWS::IAM::User'
      Properties:
        UserName: ${self:service}-consumer
        Policies:
          - PolicyName: ExampleUserSQSPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'sqs:ReceiveMessage'
                    - 'sqs:DeleteMessage'
                    - 'sqs:GetQueueUrl'
                    - 'sqs:PurgeQueue'
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:sqs:*'
                          - Ref: 'AWS::AccountId'
                          - 'Fn::GetAtt':
                              - ChangesQueue
                              - QueueName

    ChangesConsumerUserKey:
      Type: 'AWS::IAM::AccessKey'
      Properties:
        UserName:
          Ref: ChangesConsumerUser

    ChangesConsumerUserKeySecret:
      Type: 'AWS::SSM::Parameter'
      Properties:
        Name: /${self:service}-consumer-user/secret
        Type: String
        Value:
          'Fn::GetAtt':
            - ChangesConsumerUserKey
            - SecretAccessKey


  Outputs:
    AwsAccessKeyId:
      Value:
        Ref: ChangesProducerUserKey
    AwsSqsQueueUrl:
      Value:
        'Fn::GetAtt':
          - ChangesQueue
          - QueueUrl
    AwsRegion:
      Value: ${aws:region}
