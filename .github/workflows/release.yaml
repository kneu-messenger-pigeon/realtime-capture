name: Deploy to Cloudflare and AWS

on:
  push:
    branches: ['main']

jobs:
  build-node:
    name: Test and build node
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.environments.outputs.ENVIRONMENTS }}
    steps:
       - uses: actions/checkout@v3
       - name: Use Node.js 18.x
         uses: actions/setup-node@v3
         with:
           node-version: 18.x

       - name: Cache dependencies
         uses: actions/cache@v3
         with:
           path: ~/.npm
           key: npm-${{ hashFiles('package-lock.json') }}
           restore-keys: npm-

       - name: Install node packages
         run: npm ci --no-audit

       - name: Run tests
         run: npm test

       - id: environments
         name: Get environments list
         run: echo "ENVIRONMENTS=$(./get-environments.js)" >> $GITHUB_OUTPUT

       - name: Build public
         run: ./build-public.js

       - name: Save built public as artifact
         uses: actions/upload-artifact@v3
         with:
           name: build-public
           path: public/

  deploy-aws-sqs:
    name: Deploy to AWS and Cloudflare workers
    runs-on: ubuntu-latest
    needs: build-node
    strategy:
      matrix:
        env: ${{fromJson(needs.build-node.outputs.environments)}}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - run: npm ci --omit=dev --no-audit

      - name: Download built public
        uses: actions/download-artifact@v3
        with:
          name: build-public

      - name: serverless deploy
        run: npx serverless deploy --stage ${{ matrix.env }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Put correct bucket folder into wrangler.toml
        run: sed -i -e 's/{ENV}/${{ matrix.env }}/g' wrangler.toml

      - name: Put AWS credentials as Cloudflare Workers vars in wrangler.toml
        run: |
          echo -e "\n[env.${{ matrix.env }}.vars]" >> wrangler.toml
          grep -v ServerlessDeploymentBucketName vars-${{ matrix.env }}.toml >> wrangler.toml
          rm vars-${{ matrix.env }}.toml

      - name: Get AWS Secret for put into wrangler
        id: aws_secret
        run: |
          echo "::add-mask::$PRODUCER"
          echo "PRODUCER=$(aws ssm get-parameter --name /realtime-changes-${{ matrix.env }}-producer/secret --output text --query Parameter.Value)" >> $GITHUB_OUTPUT
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy cloudflare workers
        run: |
          echo ${{ steps.aws_secret.outputs.PRODUCER }} | npx wrangler secret put AwsSecretAccessKey --env ${{ matrix.env }}
          ls -R public
          npx wrangler deploy  --env ${{ matrix.env }} --site public/${{ matrix.env }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
